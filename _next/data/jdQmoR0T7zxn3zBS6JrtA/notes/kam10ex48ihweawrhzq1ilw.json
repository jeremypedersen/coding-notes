{"pageProps":{"note":{"id":"kam10ex48ihweawrhzq1ilw","title":"MySQL Usage","desc":"Notes on MySQL SQL usage and syntax","updated":1713239920214,"created":1710410040510,"custom":{},"fname":"sql.mysql","type":"note","vault":{"fsPath":".","selfContained":true,"name":"coding-notes"},"contentHash":"d2fb30e41c12a423e1cfb753199871ea","links":[],"anchors":{"section-1-basic-basics-create-and-delete-databases-and-tables-insert-records":{"type":"header","text":"Section 1: Basic Basics (Create and delete databases and tables, insert records)","value":"section-1-basic-basics-create-and-delete-databases-and-tables-insert-records","line":11,"column":0,"depth":2},"section-2-working-with-data-crud-operations":{"type":"header","text":"Section 2: Working with data (CRUD operations)","value":"section-2-working-with-data-crud-operations","line":165,"column":0,"depth":2},"create":{"type":"header","text":"Create","value":"create","line":169,"column":0,"depth":3},"read":{"type":"header","text":"Read","value":"read","line":194,"column":0,"depth":3},"update":{"type":"header","text":"Update","value":"update","line":233,"column":0,"depth":3},"section-3-working-with-string-functions":{"type":"header","text":"Section 3: Working with string functions","value":"section-3-working-with-string-functions","line":271,"column":0,"depth":2},"the-substring-function":{"type":"header","text":"The SUBSTRING Function","value":"the-substring-function","line":297,"column":0,"depth":3},"combining-substring-with-concat":{"type":"header","text":"Combining SUBSTRING with CONCAT","value":"combining-substring-with-concat","line":325,"column":0,"depth":3}},"children":[],"parent":"xk249rrm3kfwe5twpc1ouak","data":{}},"body":"<h1 id=\"mysql-usage\">MySQL Usage<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#mysql-usage\"></a></h1>\n<p>Notes on MySQL's flavor of the SQL language.</p>\n<h2 id=\"section-1-basic-basics-create-and-delete-databases-and-tables-insert-records\">Section 1: Basic Basics (Create and delete databases and tables, insert records)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#section-1-basic-basics-create-and-delete-databases-and-tables-insert-records\"></a></h2>\n<p><strong>Show what databases are available to work with</strong></p>\n<pre><code>SHOW DATABASES;\n</code></pre>\n<p><strong>Create a database</strong></p>\n<pre><code>CREATE DATABASE big_company;\n</code></pre>\n<p><strong>Show which database is in use</strong></p>\n<pre><code>SELECT database();\n</code></pre>\n<p><strong>Select a database</strong></p>\n<pre><code>USE big_company;\n</code></pre>\n<p><strong>Show tables in the database</strong></p>\n<pre><code>SHOW TABLES;\n</code></pre>\n<p><strong>Create a new table</strong></p>\n<pre><code>CREATE TABLE employees (\n    employee_id INT,\n    name VARCHAR(80),\n    role VARCHAR(80)\n);\n</code></pre>\n<p><strong>Describe a table (list its fields and datatypes)</strong></p>\n<pre><code>DESC employees;\n</code></pre>\n<p><strong>Show the contents of a table</strong></p>\n<pre><code>SELECT * FROM employees;\n</code></pre>\n<p><strong>Delete a table</strong></p>\n<pre><code>DROP TABLE employees;\n</code></pre>\n<p><strong>Insert a new record into a table</strong></p>\n<pre><code>INSERT INTO employees (employee_id, name, role) \nVALUES (0, 'Jeremy', 'Founder');\n</code></pre>\n<p><strong>(<em>Shortcut</em>) insert a new record into a table, where all fields are specified</strong></p>\n<pre><code>INSERT INTO employees VALUES (0, 'Jeremy', 'Founder');\n</code></pre>\n<p><strong>Insert mutiple new records into a table</strong></p>\n<pre><code>INSERT INTO employees (employee_id, name, role) \nVALUES \n    (1, 'Erica', 'Co-Founder'),\n    (2, 'James', 'CFO'),\n    (3, 'Leslie', 'CTO');\n</code></pre>\n<p><strong>Create a table with <em>required</em> fields (meaning fields which cannot be <code>NULL</code></strong></p>\n<pre><code>CREATE TABLE students (\n    name VARCHAR(80) NOT NULL,\n    gpa INT NOT NULL\n);\n</code></pre>\n<p><strong>Create a table with <em>required</em> fields and <em>default</em> values for those fields</strong></p>\n<pre><code>CREATE TABLE students (\n    name VARCHAR(80) NOT NULL DEFAULT 'noname',\n    gpa INT NOT NULL DEFAULT 0\n);\n</code></pre>\n<p><strong>Insert an empty record (defaults will get filled in)</strong></p>\n<pre><code>INSERT INTO students () VALUES ();\n</code></pre>\n<p><strong>Insert a record where only some fields are specified</strong></p>\n<pre><code>INSERT INTO students (name) VALUES ('James');\n</code></pre>\n<p><strong>Create a table with a primary key</strong></p>\n<pre><code>CREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    team_id INT NOT NULL\n);\n</code></pre>\n<p><strong>Create a table with a primary key that increments on its own</strong></p>\n<pre><code>CREATE TABLE employees (\n    employee_id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(100) NOT NULL,\n    team_id INT NOT NULL\n);\n</code></pre>\n<p><strong>Insert records into a table with a primary key (identical-looking records can still be differentiated using the primary key)</strong></p>\n<pre><code>INSERT INTO employees (name, team_id) \nVALUES \n    ('Bob', 25),\n    ('Bob', 25),\n    ('Bob', 25);\n</code></pre>\n<p><strong>(<em>Optional</em>) another way to create a primary key which auto-increments</strong></p>\n<pre><code>CREATE TABLE employees (\n    employee_id INT AUTO_INCREMENT,\n    name VARCHAR(100) NOT NULL,\n    team_id INT NOT NULL,\n    PRIMARY KEY(employee_id)\n);\n</code></pre>\n<h2 id=\"section-2-working-with-data-crud-operations\">Section 2: Working with data (CRUD operations)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#section-2-working-with-data-crud-operations\"></a></h2>\n<p><strong>CRUD = Create, Read, Update, Delete</strong></p>\n<h3 id=\"create\">Create<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#create\"></a></h3>\n<p><strong>Create a database</strong></p>\n<pre><code>CREATE DATABASE big_company;\n</code></pre>\n<p><strong>Create a table</strong></p>\n<pre><code>CREATE TABLE employees (\n    employee_id INT AUTO_INCREMENT,\n    name VARCHAR(100) NOT NULL,\n    team_id INT NOT NULL,\n    PRIMARY KEY(employee_id)\n);\n</code></pre>\n<p><strong>Create a record in a table</strong></p>\n<pre><code>INSERT INTO employees (name, team_id) VALUES ('Bob', 25);\n</code></pre>\n<h3 id=\"read\">Read<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#read\"></a></h3>\n<p><strong>Select all items from a table (<em>read</em>)</strong></p>\n<pre><code>SELECT * FROM employees;\n</code></pre>\n<p><strong>Select specific columns</strong></p>\n<pre><code>SELECT name FROM employees;\n</code></pre>\n<p><strong>Select records that meet a certain condition</strong></p>\n<pre><code>SELECT * FROM employees WHERE name = 'Bob';\n</code></pre>\n<p><em>Note:</em> Just because we are using <code>WHERE</code> with a specific column, doesn't mean we have to <code>SELECT</code> that column. For instance, if I wanted to know which teams had an employee named \"Bob\", I could do this:</p>\n<pre><code>SELECT team_id FROM employees WHERE name = 'Bob' ;\n</code></pre>\n<p><em>Note:</em> By default, string comparisons are <em>case insensitive</em> in MySQL. </p>\n<p><strong>Select records where one column's value matches the value of another column</strong></p>\n<pre><code>SELECT * FROM employees where team_id = employee_id;\n</code></pre>\n<p><strong>Rename one or more columns using <code>AS</code></strong></p>\n<pre><code>SELECT employee_id AS id, name FROM employees; \n</code></pre>\n<h3 id=\"update\">Update<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#update\"></a></h3>\n<p><strong>Update an existing row in a table</strong></p>\n<pre><code>UPDATE employees SET name = 'Other Bob' WHERE employee_id = 1;\n</code></pre>\n<p><strong>Update a single column for all rows at once</strong></p>\n<pre><code>UPDATE employees SET name = 'Whatever';\n</code></pre>\n<p><strong>Update multiple columns for all rows at once</strong></p>\n<pre><code>UPDATE employees SET name = 'Whatever', team_id = 0;\n</code></pre>\n<p><strong>Delete one row</strong></p>\n<pre><code>DELETE FROM employees WHERE employee_id = 1;\n</code></pre>\n<p><strong>Delete one or more rows that match a pattern</strong></p>\n<pre><code>DELETE FROM employees WHERE name = 'Whatever';\n</code></pre>\n<p><strong>Delete <em>all</em> rows</strong></p>\n<pre><code>DELETE FROM employees;\n</code></pre>\n<h2 id=\"section-3-working-with-string-functions\">Section 3: Working with string functions<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#section-3-working-with-string-functions\"></a></h2>\n<p><strong>Concatenate arbitrary strings</strong></p>\n<pre><code>SELECT CONCAT('h', 'e', 'l', 'l', 'o');\n</code></pre>\n<p><strong>Concatenate string data from from two columns in a table</strong></p>\n<pre><code>SELECT CONCAT (first_name, ' ', last_name) FROM friends;\n</code></pre>\n<p><strong>Concatenate and rename the output</strong></p>\n<pre><code>SELECT CONCAT (first_name, ' ', last_name) AS full_name FROM friends ;\n</code></pre>\n<p><strong>Concatenate with a separator between each item</strong></p>\n<pre><code>SELECT CONCAT_WS (' ', first_name, last_name) AS full_name FROM friends ;\n</code></pre>\n<h3 id=\"the-substring-function\">The <code>SUBSTRING</code> Function<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#the-substring-function\"></a></h3>\n<p><code>SUBSTRING</code> is a cool little function that lets you select a portion of a string. </p>\n<p><strong>Select 4 characters, starting from index 1 (the first character)</strong></p>\n<pre><code>SELECT SUBSTRING('Hey there friends', 1, 4);\n</code></pre>\n<p><strong>Note:</strong> The command above will print out <code>Hey </code>, which appears to be 3 characters but is actually four (remember there's a space after the <code>y</code>!)</p>\n<p><strong>Select all characters from position 5 to the end of the string</strong></p>\n<pre><code>SELECT SUBSTRING('Hey there friends', 5);\n</code></pre>\n<p><strong>Note:</strong> This will print <code>there friends</code></p>\n<p><strong>Select the <em>last</em> three characters in a string</strong></p>\n<pre><code>SELECT SUBSTRING('Hey there friends', -3);\n</code></pre>\n<p><strong>Note:</strong> This will print <code>nds</code></p>\n<h3 id=\"combining-substring-with-concat\">Combining <code>SUBSTRING</code> with <code>CONCAT</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#combining-substring-with-concat\"></a></h3>\n<p>Coming soon!</p>","noteIndex":{"id":"9qx3z8b2wfr5chnnb949zv2","title":"Coding Notes","desc":"Notes on writing, fixing, optimizing, and managing code","updated":1713239898794,"created":1710404034956,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"coding-notes"},"contentHash":"343469aff8d1dd850480e3be33dce7c1","links":[],"anchors":{},"children":["z1cgzhp9dn5hy47dl69sgwr","zrzuso1wjne88yp1b9wtm8v","e1efo5mvaktzbf53sksb0k0","xk249rrm3kfwe5twpc1ouak","2oo9jjnro6kp9228ryfqdgw"],"parent":null,"data":{},"body":"\nWelcome! I keep all my coding notes here. Anything I learn about writing code, testing code, updating code, or optimizing code will go here.\n\nCheck back from time to time for updates. \n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"coding-notes"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://jeremypedersen.github.io","assetsPrefix":"/coding-notes","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}